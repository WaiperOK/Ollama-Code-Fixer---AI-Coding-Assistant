// localization.ts
import * as vscode from 'vscode';

interface LocaleStrings {
    [key: string]: {
        
        chatTitle: string;
        welcomeMessage: string;
        sendButton: string;
        inputPlaceholder: string;
        loadingMessage: string;
        copyButton: string;
        applyButton: string;
        understood: string;
        codeAppliedSuccess: string;
        
        
        quickPromptsTitle: string;
        fixErrorsPrompt: string;
        optimizePrompt: string;
        addCommentsPrompt: string;
        refactorPrompt: string;
        checkSecurityPrompt: string;
        createTestsPrompt: string;
        explainCodePrompt: string;
        
        selectModel: string;
        modelNotInstalled: string;
        installModel: string;
        changeModel: string;
        modelInstallStarted: string;
        modelInstallProgress: string;
        pleaseWait: string;
        selectAvailableModel: string;
        
        
        error: string;
        unknownError: string;
        noActiveEditor: string;
        noSelection: string;
        apiError: string;
        invalidUrl: string;
        ollamaApiError: string;
        
       
        settings: string;
        temperature: string;
        maxTokens: string;
        topP: string;
        topK: string;
        language: string;
        contextTokens: string;
        repeatPenalty: string;
        presencePenalty: string;
        frequencyPenalty: string;
        mirostat: string;
        mirostatTau: string;
        mirostatEta: string;
        model: string;

        
        retryAttempt: string;
        retryFailed: string;
        checkConnection: string;
        serverTimeout: string;
        serverOverloaded: string;
        networkError: string;
        modelError: string;
        modelCheckFailed: string;
    };
}

const strings: LocaleStrings = {
    'en': {
        chatTitle: 'ü¶ô Ollama Code Fixer',
        welcomeMessage: 'Hello! I can help you analyze and fix code. Choose a quick prompt above or ask your question.',
        sendButton: 'Send',
        inputPlaceholder: 'Enter your question or paste code...',
        loadingMessage: 'Ollama is processing request...',
        copyButton: 'Copy',
        applyButton: 'Apply',
        understood: 'Got it',
        codeAppliedSuccess: 'Code applied successfully!',
        
        quickPromptsTitle: 'Quick Prompts:',
        fixErrorsPrompt: 'üîß Fix Errors',
        optimizePrompt: '‚ö° Optimize',
        addCommentsPrompt: 'üìù Add Comments',
        refactorPrompt: 'üîÑ Refactor',
        checkSecurityPrompt: 'üîí Check Security',
        createTestsPrompt: 'üß™ Create Tests',
        explainCodePrompt: '‚ùì Explain Code',
        
        selectModel: 'Select Model',
        modelNotInstalled: 'Model "{0}" is not installed.',
        installModel: 'Install Model',
        changeModel: 'Change Model',
        modelInstallStarted: 'Started installing model {0}.',
        modelInstallProgress: 'Installing model {0}. Please wait for completion in terminal.',
        pleaseWait: 'Please try again after installation completes.',
        selectAvailableModel: 'Select available model',
        
        error: 'Error',
        unknownError: 'Unknown error occurred',
        noActiveEditor: 'No active editor',
        noSelection: 'No text selected',
        apiError: 'API Error',
        invalidUrl: 'Invalid URL',
        ollamaApiError: 'Ollama API Error: {0}',
        
        
        settings: 'Settings',
        temperature: 'Temperature',
        maxTokens: 'Max Tokens',
        topP: 'Top P',
        topK: 'Top K',
        language: 'Language',
        contextTokens: 'Context Length',
        repeatPenalty: 'Repeat Penalty',
        presencePenalty: 'Presence Penalty',
        frequencyPenalty: 'Frequency Penalty',
        mirostat: 'Mirostat',
        mirostatTau: 'Mirostat Tau',
        mirostatEta: 'Mirostat Eta',
        model: 'Model',

      
        retryAttempt: 'Attempt {0} of {1}. Retrying in {2} seconds...',
        retryFailed: 'All retry attempts failed. Last error: {0}',
        checkConnection: 'Please check your connection to Ollama server',
        serverTimeout: 'Server request timed out',
        serverOverloaded: 'Server is currently overloaded',
        networkError: 'Network connection error',
        modelError: 'Model error: {0}',
        modelCheckFailed: 'Failed to check available models: {0}'
    },
    
    'ru': {
        
        chatTitle: 'ü¶ô Ollama Code Fixer',
        welcomeMessage: '–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É –≤–∞–º —Å –∞–Ω–∞–ª–∏–∑–æ–º –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –∫–æ–¥–∞. –í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ç–æ–≤—É—é –ø–æ–¥—Å–∫–∞–∑–∫—É –≤—ã—à–µ –∏–ª–∏ –∑–∞–¥–∞–π—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å.',
        sendButton: '–û—Ç–ø—Ä–∞–≤–∏—Ç—å',
        inputPlaceholder: '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –≤—Å—Ç–∞–≤—å—Ç–µ –∫–æ–¥...',
        loadingMessage: 'Ollama –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å...',
        copyButton: '–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å',
        applyButton: '–ü—Ä–∏–º–µ–Ω–∏—Ç—å',
        understood: '–ü–æ–Ω—è—Ç–Ω–æ',
        codeAppliedSuccess: '–ö–æ–¥ —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω—ë–Ω!',
        
        
        quickPromptsTitle: '–ë—ã—Å—Ç—Ä—ã–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏:',
        fixErrorsPrompt: 'üîß –ò—Å–ø—Ä–∞–≤–∏—Ç—å –æ—à–∏–±–∫–∏',
        optimizePrompt: '‚ö° –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å',
        addCommentsPrompt: 'üìù –î–æ–±–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏',
        refactorPrompt: 'üîÑ –†–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥',
        checkSecurityPrompt: 'üîí –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å',
        createTestsPrompt: 'üß™ –°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç—ã',
        explainCodePrompt: '‚ùì –û–±—ä—è—Å–Ω–∏—Ç—å –∫–æ–¥',
        
        
        selectModel: '–í—ã–±—Ä–∞—Ç—å –º–æ–¥–µ–ª—å',
        modelNotInstalled: '–ú–æ–¥–µ–ª—å "{0}" –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.',
        installModel: '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–æ–¥–µ–ª—å',
        changeModel: '–°–º–µ–Ω–∏—Ç—å –º–æ–¥–µ–ª—å',
        modelInstallStarted: '–ù–∞—á–∞—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–¥–µ–ª–∏ {0}.',
        modelInstallProgress: '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–¥–µ–ª–∏ {0}. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–∂–¥–∏—Ç–µ—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ.',
        pleaseWait: '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏.',
        selectAvailableModel: '–í—ã–±–µ—Ä–∏—Ç–µ –¥–æ—Å—Ç—É–ø–Ω—É—é –º–æ–¥–µ–ª—å',
      
        error: '–û—à–∏–±–∫–∞',
        unknownError: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞',
        noActiveEditor: '–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞',
        noSelection: '–ù–µ—Ç –≤—ã–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞',
        apiError: '–û—à–∏–±–∫–∞ API',
        invalidUrl: '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π URL',
        ollamaApiError: '–û—à–∏–±–∫–∞ Ollama API: {0}',
        
        
        settings: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏',
        temperature: '–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞',
        maxTokens: '–ú–∞–∫—Å. —Ç–æ–∫–µ–Ω–æ–≤',
        topP: 'Top P',
        topK: 'Top K',
        language: '–Ø–∑—ã–∫',
        contextTokens: '–î–ª–∏–Ω–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞',
        repeatPenalty: '–®—Ç—Ä–∞—Ñ –∑–∞ –ø–æ–≤—Ç–æ—Ä—ã',
        presencePenalty: '–®—Ç—Ä–∞—Ñ –∑–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ',
        frequencyPenalty: '–®—Ç—Ä–∞—Ñ –∑–∞ —á–∞—Å—Ç–æ—Ç—É',
        mirostat: '–ú–∏—Ä–æ—Å—Ç–∞—Ç',
        mirostatTau: '–¢–∞—É –º–∏—Ä–æ—Å—Ç–∞—Ç–∞',
        mirostatEta: '–≠—Ç–∞ –º–∏—Ä–æ—Å—Ç–∞—Ç–∞',
        model: '–ú–æ–¥–µ–ª—å',

        retryAttempt: '–ü–æ–ø—ã—Ç–∫–∞ {0} –∏–∑ {1}. –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —á–µ—Ä–µ–∑ {2} —Å–µ–∫...',
        retryFailed: '–í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å –Ω–µ—É–¥–∞—á–µ–π. –ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞: {0}',
        checkConnection: '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É Ollama',
        serverTimeout: '–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞',
        serverOverloaded: '–°–µ—Ä–≤–µ—Ä –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω',
        networkError: '–û—à–∏–±–∫–∞ —Å–µ—Ç–µ–≤–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è',
        modelError: '–û—à–∏–±–∫–∞ –º–æ–¥–µ–ª–∏: {0}',
        modelCheckFailed: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏: {0}'
    },
    
    'uk': {
        // –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –º–æ–≤–∞
        chatTitle: 'ü¶ô Ollama Code Fixer',
        welcomeMessage: '–ü—Ä–∏–≤—ñ—Ç! –Ø –¥–æ–ø–æ–º–æ–∂—É –≤–∞–º –∑ –∞–Ω–∞–ª—ñ–∑–æ–º —Ç–∞ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è–º –∫–æ–¥—É. –û–±–µ—Ä—ñ—Ç—å –≥–æ—Ç–æ–≤—É –ø—ñ–¥–∫–∞–∑–∫—É –≤–∏—â–µ –∞–±–æ –∑–∞–¥–∞–π—Ç–µ —Å–≤–æ—î –ø–∏—Ç–∞–Ω–Ω—è.',
        sendButton: '–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏',
        inputPlaceholder: '–í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ –ø–∏—Ç–∞–Ω–Ω—è –∞–±–æ –≤—Å—Ç–∞–≤—Ç–µ –∫–æ–¥...',
        loadingMessage: 'Ollama –æ–±—Ä–æ–±–ª—è—î –∑–∞–ø–∏—Ç...',
        copyButton: '–ö–æ–ø—ñ—é–≤–∞—Ç–∏',
        applyButton: '–ó–∞—Å—Ç–æ—Å—É–≤–∞—Ç–∏',
        understood: '–ó—Ä–æ–∑—É–º—ñ–ª–æ',
        codeAppliedSuccess: '–ö–æ–¥ —É—Å–ø—ñ—à–Ω–æ –∑–∞—Å—Ç–æ—Å–æ–≤–∞–Ω–æ!',
        
        quickPromptsTitle: '–®–≤–∏–¥–∫—ñ –ø—ñ–¥–∫–∞–∑–∫–∏:',
        fixErrorsPrompt: 'üîß –í–∏–ø—Ä–∞–≤–∏—Ç–∏ –ø–æ–º–∏–ª–∫–∏',
        optimizePrompt: '‚ö° –û–ø—Ç–∏–º—ñ–∑—É–≤–∞—Ç–∏',
        addCommentsPrompt: 'üìù –î–æ–¥–∞—Ç–∏ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ',
        refactorPrompt: 'üîÑ –†–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥',
        checkSecurityPrompt: 'üîí –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –±–µ–∑–ø–µ–∫—É',
        createTestsPrompt: 'üß™ –°—Ç–≤–æ—Ä–∏—Ç–∏ —Ç–µ—Å—Ç–∏',
        explainCodePrompt: '‚ùì –ü–æ—è—Å–Ω–∏—Ç–∏ –∫–æ–¥',
        
        selectModel: '–û–±—Ä–∞—Ç–∏ –º–æ–¥–µ–ª—å',
        modelNotInstalled: '–ú–æ–¥–µ–ª—å "{0}" –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.',
        installModel: '–í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –º–æ–¥–µ–ª—å',
        changeModel: '–ó–º—ñ–Ω–∏—Ç–∏ –º–æ–¥–µ–ª—å',
        modelInstallStarted: '–†–æ–∑–ø–æ—á–∞—Ç–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –º–æ–¥–µ–ª—ñ {0}.',
        modelInstallProgress: '–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –º–æ–¥–µ–ª—ñ {0}. –ë—É–¥—å –ª–∞—Å–∫–∞, –¥–æ—á–µ–∫–∞–π—Ç–µ—Å—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –≤ —Ç–µ—Ä–º—ñ–Ω–∞–ª—ñ.',
        pleaseWait: '–ë—É–¥—å –ª–∞—Å–∫–∞, –ø–æ–≤—Ç–æ—Ä—ñ—Ç—å –∑–∞–ø–∏—Ç –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è.',
        selectAvailableModel: '–û–±–µ—Ä—ñ—Ç—å –¥–æ—Å—Ç—É–ø–Ω—É –º–æ–¥–µ–ª—å',
        
        error: '–ü–æ–º–∏–ª–∫–∞',
        unknownError: '–°—Ç–∞–ª–∞—Å—è –Ω–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞',
        noActiveEditor: '–ù–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞',
        noSelection: '–ù–µ–º–∞—î –≤–∏–¥—ñ–ª–µ–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç—É',
        apiError: '–ü–æ–º–∏–ª–∫–∞ API',
        invalidUrl: '–ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π URL',
        ollamaApiError: '–ü–æ–º–∏–ª–∫–∞ Ollama API: {0}',
        
        settings: '–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è',
        temperature: '–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞',
        maxTokens: '–ú–∞–∫—Å. —Ç–æ–∫–µ–Ω—ñ–≤',
        topP: 'Top P',
        topK: 'Top K',
        language: '–ú–æ–≤–∞',
        contextTokens: '–î–æ–≤–∂–∏–Ω–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É',
        repeatPenalty: '–®—Ç—Ä–∞—Ñ –∑–∞ –ø–æ–≤—Ç–æ—Ä–∏',
        presencePenalty: '–®—Ç—Ä–∞—Ñ –∑–∞ –ø—Ä–∏—Å—É—Ç–Ω—ñ—Å—Ç—å',
        frequencyPenalty: '–®—Ç—Ä–∞—Ñ –∑–∞ —á–∞—Å—Ç–æ—Ç—É',
        mirostat: '–ú—ñ—Ä–æ—Å—Ç–∞—Ç',
        mirostatTau: '–¢–∞—É –º—ñ—Ä–æ—Å—Ç–∞—Ç–∞',
        mirostatEta: '–ï—Ç–∞ –º—ñ—Ä–æ—Å—Ç–∞—Ç–∞',
        model: '–ú–æ–¥–µ–ª—å',

        retryAttempt: '–°–ø—Ä–æ–±–∞ {0} –∑ {1}. –ü–æ–≤—Ç–æ—Ä–Ω–∞ —Å–ø—Ä–æ–±–∞ —á–µ—Ä–µ–∑ {2} —Å–µ–∫...',
        retryFailed: '–í—Å—ñ —Å–ø—Ä–æ–±–∏ –≤–∏–∫–æ–Ω–∞—Ç–∏ –∑–∞–ø–∏—Ç –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—è –Ω–µ–≤–¥–∞—á–µ—é. –û—Å—Ç–∞–Ω–Ω—è –ø–æ–º–∏–ª–∫–∞: {0}',
        checkConnection: '–ë—É–¥—å –ª–∞—Å–∫–∞, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ —Å–µ—Ä–≤–µ—Ä–∞ Ollama',
        serverTimeout: '–ü–µ—Ä–µ–≤–∏—â–µ–Ω–æ —á–∞—Å –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –≤—ñ–¥ —Å–µ—Ä–≤–µ—Ä–∞',
        serverOverloaded: '–°–µ—Ä–≤–µ—Ä –≤ –¥–∞–Ω–∏–π –º–æ–º–µ–Ω—Ç –ø–µ—Ä–µ–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏–π',
        networkError: '–ü–æ–º–∏–ª–∫–∞ –º–µ—Ä–µ–∂–µ–≤–æ–≥–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è',
        modelError: '–ü–æ–º–∏–ª–∫–∞ –º–æ–¥–µ–ª—ñ: {0}',
        modelCheckFailed: '–ù–µ –≤–¥–∞–ª–æ—Å—è –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ñ –º–æ–¥–µ–ª—ñ: {0}'
    },
    
    'es': {
        // Espa√±ol
        chatTitle: 'ü¶ô Ollama Code Fixer',
        welcomeMessage: '¬°Hola! Puedo ayudarte a analizar y corregir c√≥digo. Elige una sugerencia r√°pida arriba o haz tu pregunta.',
        sendButton: 'Enviar',
        inputPlaceholder: 'Escribe tu pregunta o pega el c√≥digo...',
        loadingMessage: 'Ollama est√° procesando la solicitud...',
        copyButton: 'Copiar',
        applyButton: 'Aplicar',
        understood: 'Entendido',
        codeAppliedSuccess: '¬°C√≥digo aplicado con √©xito!',
        
        quickPromptsTitle: 'Sugerencias r√°pidas:',
        fixErrorsPrompt: 'üîß Corregir errores',
        optimizePrompt: '‚ö° Optimizar',
        addCommentsPrompt: 'üìù A√±adir comentarios',
        refactorPrompt: 'üîÑ Refactorizar',
        checkSecurityPrompt: 'üîí Verificar seguridad',
        createTestsPrompt: 'üß™ Crear pruebas',
        explainCodePrompt: '‚ùì Explicar c√≥digo',
        
        selectModel: 'Seleccionar modelo',
        modelNotInstalled: 'El modelo "{0}" no est√° instalado.',
        installModel: 'Instalar modelo',
        changeModel: 'Cambiar modelo',
        modelInstallStarted: 'Iniciada la instalaci√≥n del modelo {0}.',
        modelInstallProgress: 'Instalando modelo {0}. Por favor, espera a que se complete en la terminal.',
        pleaseWait: 'Por favor, int√©ntalo de nuevo despu√©s de que se complete la instalaci√≥n.',
        selectAvailableModel: 'Selecciona un modelo disponible',
        
        error: 'Error',
        unknownError: 'Ocurri√≥ un error desconocido',
        noActiveEditor: 'No hay editor activo',
        noSelection: 'No hay texto seleccionado',
        apiError: 'Error de API',
        invalidUrl: 'URL inv√°lida',
        ollamaApiError: 'Error de Ollama API: {0}',
        
        settings: 'Configuraci√≥n',
        temperature: 'Temperatura',
        maxTokens: 'M√°x. tokens',
        topP: 'Top P',
        topK: 'Top K',
        language: 'Idioma',
        contextTokens: 'Longitud del contexto',
        repeatPenalty: 'Penalizaci√≥n por repetici√≥n',
        presencePenalty: 'Penalizaci√≥n por presencia',
        frequencyPenalty: 'Penalizaci√≥n por frecuencia',
        mirostat: 'Mirostat',
        mirostatTau: 'Tau de Mirostat',
        mirostatEta: 'Eta de Mirostat',
        model: 'Modelo',

        retryAttempt: 'Intento {0} de {1}. Reintentando en {2} segundos...',
        retryFailed: 'Todos los intentos fallaron. √öltimo error: {0}',
        checkConnection: 'Por favor, verifica tu conexi√≥n al servidor Ollama',
        serverTimeout: 'Tiempo de espera del servidor agotado',
        serverOverloaded: 'El servidor est√° actualmente sobrecargado',
        networkError: 'Error de conexi√≥n de red',
        modelError: 'Error del modelo: {0}',
        modelCheckFailed: 'Error al verificar modelos disponibles: {0}'
    }
};

export function getLocaleStrings(): LocaleStrings[keyof LocaleStrings] {
    const config = vscode.workspace.getConfiguration('ollamaCodeFixer');
    const language = config.get<string>('language', 'en');
    return strings[language] || strings['en'];
}
