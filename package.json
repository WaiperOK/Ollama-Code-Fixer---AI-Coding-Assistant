{
  "name": "ollama-code-fixer",
  "displayName": "Ollama Code Fixer - AI Coding Assistant",
  "description": "Comprehensive AI-powered coding assistant using local Ollama models. Fix, optimize, explain, test, refactor code with 9 operations.",
  "version": "0.3.0",
  "publisher": "WaiperOK",
  "author": {
    "name": "WaiperOK",
    "email": "waiperok.dev@gmail.com",
    "url": "https://github.com/WaiperOK"
  },
  "icon": "images/icon.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/WaiperOK/Ollama-Code-Fixer---AI-Coding-Assistant.git"
  },
  "bugs": {
    "url": "https://github.com/WaiperOK/Ollama-Code-Fixer---AI-Coding-Assistant/issues"
  },
  "homepage": "https://github.com/WaiperOK/Ollama-Code-Fixer---AI-Coding-Assistant#readme",
  "license": "MIT",
  "engines": {
    "vscode": "^1.85.0"
  },
  "categories": [
    "Programming Languages",
    "Machine Learning", 
    "Linters",
    "Other"
  ],
  "keywords": [
    "ollama",
    "ai",
    "artificial intelligence",
    "code assistant",
    "code fixer", 
    "code optimizer",
    "code generator",
    "refactoring",
    "testing",
    "security",
    "llama",
    "codellama",
    "local ai",
    "programming assistant"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "ollama-code-fixer.fixSelectedCode",
        "title": "üîß Fix Code",
        "category": "Ollama AI",
        "icon": "$(wrench)"
      },
      {
        "command": "ollama-code-fixer.optimizeCode",
        "title": "‚ö° Optimize Code",
        "category": "Ollama AI",
        "icon": "$(zap)"
      },
      {
        "command": "ollama-code-fixer.explainCode",
        "title": "üìù Explain Code",
        "category": "Ollama AI",
        "icon": "$(info)"
      },
      {
        "command": "ollama-code-fixer.generateComments",
        "title": "üí¨ Add Comments",
        "category": "Ollama AI",
        "icon": "$(comment)"
      },
      {
        "command": "ollama-code-fixer.generateTests",
        "title": "üß™ Generate Tests",
        "category": "Ollama AI",
        "icon": "$(beaker)"
      },
      {
        "command": "ollama-code-fixer.refactorCode",
        "title": "üîÑ Refactor Code",
        "category": "Ollama AI",
        "icon": "$(refresh)"
      },
      {
        "command": "ollama-code-fixer.checkSecurity",
        "title": "üîí Security Check",
        "category": "Ollama AI",
        "icon": "$(shield)"
      },
      {
        "command": "ollama-code-fixer.generateCode",
        "title": "‚ú® Generate Code",
        "category": "Ollama AI",
        "icon": "$(sparkle)"
      },
      {
        "command": "ollama-code-fixer.translateCode",
        "title": "üåê Translate Code",
        "category": "Ollama AI",
        "icon": "$(globe)"
      },
      {
        "command": "ollama-code-fixer.openChat",
        "title": "üí¨ Open AI Chat",
        "category": "Ollama AI",
        "icon": "$(comment-discussion)"
      },
      {
        "command": "ollama-code-fixer.checkApiStatus",
        "title": "üì° Check API Status",
        "category": "Ollama AI",
        "icon": "$(pulse)"
      },
      {
        "command": "ollama-code-fixer.startOllama",
        "title": "üöÄ Start Ollama Server",
        "category": "Ollama AI",
        "icon": "$(play)"
      },
      {
        "command": "ollama-code-fixer.selectModel",
        "title": "üéØ Select Model",
        "category": "Ollama AI",
        "icon": "$(settings-gear)"
      },
      {
        "command": "ollama-code-fixer.installModel",
        "title": "üì• Install Model",
        "category": "Ollama AI",
        "icon": "$(cloud-download)"
      },
      {
        "command": "ollama-code-fixer.showInstalledModels",
        "title": "üìã Show Models",
        "category": "Ollama AI",
        "icon": "$(list-unordered)"
      },
      {
        "command": "ollama-code-fixer.changeLanguage",
        "title": "üåê Change Language",
        "category": "Ollama AI",
        "icon": "$(globe)"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "when": "editorHasSelection",
          "command": "ollama-code-fixer.fixSelectedCode",
          "group": "ollama@1"
        },
        {
          "when": "editorHasSelection",
          "command": "ollama-code-fixer.optimizeCode",
          "group": "ollama@2"
        },
        {
          "when": "editorHasSelection",
          "command": "ollama-code-fixer.explainCode",
          "group": "ollama@3"
        },
        {
          "when": "editorHasSelection",
          "command": "ollama-code-fixer.generateComments",
          "group": "ollama@4"
        },
        {
          "when": "editorHasSelection",
          "command": "ollama-code-fixer.generateTests",
          "group": "ollama@5"
        },
        {
          "when": "editorHasSelection",
          "command": "ollama-code-fixer.refactorCode",
          "group": "ollama@6"
        },
        {
          "when": "editorHasSelection",
          "command": "ollama-code-fixer.checkSecurity",
          "group": "ollama@7"
        },
        {
          "when": "!editorHasSelection",
          "command": "ollama-code-fixer.generateCode",
          "group": "ollama@8"
        }
      ],
      "commandPalette": [
        {
          "command": "ollama-code-fixer.fixSelectedCode",
          "when": "editorHasSelection"
        },
        {
          "command": "ollama-code-fixer.optimizeCode",
          "when": "editorHasSelection"
        },
        {
          "command": "ollama-code-fixer.explainCode",
          "when": "editorHasSelection"
        },
        {
          "command": "ollama-code-fixer.generateComments",
          "when": "editorHasSelection"
        },
        {
          "command": "ollama-code-fixer.generateTests",
          "when": "editorHasSelection"
        },
        {
          "command": "ollama-code-fixer.refactorCode",
          "when": "editorHasSelection"
        },
        {
          "command": "ollama-code-fixer.checkSecurity",
          "when": "editorHasSelection"
        },
        {
          "command": "ollama-code-fixer.generateCode",
          "when": "true"
        },
        {
          "command": "ollama-code-fixer.translateCode",
          "when": "editorHasSelection"
        },
        {
          "command": "ollama-code-fixer.openChat",
          "when": "true"
        },
        {
          "command": "ollama-code-fixer.checkApiStatus",
          "when": "true"
        },
        {
          "command": "ollama-code-fixer.startOllama",
          "when": "true"
        },
        {
          "command": "ollama-code-fixer.selectModel",
          "when": "true"
        },
        {
          "command": "ollama-code-fixer.installModel",
          "when": "true"
        },
        {
          "command": "ollama-code-fixer.showInstalledModels",
          "when": "true"
        },
        {
          "command": "ollama-code-fixer.changeLanguage",
          "when": "true"
        }
      ]
    },
    "configuration": {
      "title": "Ollama Code Fixer",
      "properties": {
        "ollamaCodeFixer.language": {
          "type": "string",
          "enum": ["en", "ru", "uk", "es"],
          "enumDescriptions": [
            "English",
            "–†—É—Å—Å–∫–∏–π", 
            "–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞",
            "Espa√±ol"
          ],
          "default": "en",
          "description": "Interface and chat language / –Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –∏ —á–∞—Ç–∞ / –ú–æ–≤–∞ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É —Ç–∞ —á–∞—Ç—É / Idioma de la interfaz y chat"
        },
        "ollamaCodeFixer.ollamaApiUrl": {
          "type": "string",
          "default": "http://localhost:11434",
          "description": "URL for the Ollama API (base URL only)."
        },
        "ollamaCodeFixer.modelName": {
          "type": "string",
          "default": "codellama:7b",
          "description": "The Ollama model to use (e.g., 'codellama:7b', 'llama2:7b', 'mistral:7b'). Make sure it's pulled in Ollama."
        },
        "ollamaCodeFixer.requestTimeout": {
          "type": "integer",
          "default": 90000,
          "description": "Timeout in milliseconds for requests to the Ollama API."
        },
        "ollamaCodeFixer.maxRetries": {
          "type": "integer",
          "default": 3,
          "minimum": 0,
          "maximum": 10,
          "description": "Maximum number of retry attempts for failed API requests."
        },
        "ollamaCodeFixer.retryDelay": {
          "type": "integer",
          "default": 1000,
          "minimum": 100,
          "maximum": 10000,
          "description": "Delay in milliseconds between retry attempts."
        },
        "ollamaCodeFixer.retryBackoffMultiplier": {
          "type": "number",
          "default": 1.5,
          "minimum": 1.0,
          "maximum": 3.0,
          "description": "Multiplier for increasing delay between retries."
        },
        "ollamaCodeFixer.enableNotifications": {
          "type": "boolean",
          "default": true,
          "description": "Enable or disable notifications from Ollama Code Fixer."
        },
        "ollamaCodeFixer.logLevel": {
          "type": "string",
          "enum": ["error", "warn", "info", "debug"],
          "default": "info",
          "description": "Set the logging level for Ollama Code Fixer."
        },
        "ollamaCodeFixer.temperature": {
          "type": "number",
          "default": 0.7,
          "minimum": 0.0,
          "maximum": 2.0,
          "description": "Temperature for model responses (0.0 - 2.0). Lower values make responses more focused and deterministic."
        },
        "ollamaCodeFixer.topP": {
          "type": "number",
          "default": 0.9,
          "minimum": 0.0,
          "maximum": 1.0,
          "description": "Top-p (nucleus sampling) value. Lower values make responses more focused."
        },
        "ollamaCodeFixer.topK": {
          "type": "integer",
          "default": 40,
          "minimum": 1,
          "maximum": 100,
          "description": "Top-k value for sampling. Lower values make responses more focused."
        },
        "ollamaCodeFixer.contextLength": {
          "type": "integer",
          "default": 4096,
          "description": "Maximum context length for the model."
        },
        "ollamaCodeFixer.repeatPenalty": {
          "type": "number",
          "default": 1.1,
          "minimum": 0.0,
          "maximum": 2.0,
          "description": "Penalty for repeating tokens. Higher values reduce repetition."
        },
        "ollamaCodeFixer.stopSequences": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": ["[/INST]", "</s>", "```"],
          "description": "Sequences that will stop generation when encountered."
        },
        "ollamaCodeFixer.seed": {
          "type": "integer",
          "default": -1,
          "description": "Random seed for reproducible responses (-1 for random)."
        },
        "ollamaCodeFixer.maxTokens": {
          "type": "integer",
          "default": 2048,
          "description": "Maximum number of tokens to generate."
        },
        "ollamaCodeFixer.formatResponse": {
          "type": "boolean",
          "default": true,
          "description": "Automatically format code in responses."
        },
        "ollamaCodeFixer.promptStructure": {
          "type": "object",
          "default": {
            "prefix": "[INST] You are an expert AI programming assistant. Your task is to analyze the provided code snippet, identify any errors or areas for improvement, and return *only* the corrected and optimized code block. Do not include any explanations, apologies, or markdown formatting around the code block itself unless the language implies it (like for markdown file corrections). If the code is already perfect or no changes are needed, return the original code snippet as is.\n\nLanguage: {language}\n\nProblematic Code Snippet:\n```\n",
            "suffix": "\n```\n[/INST]\nCorrected Code Snippet:\n```\n"
          },
          "description": "Structure for prompts sent to Ollama with prefix and suffix."
        },
        "ollamaCodeFixer.autoApplyChanges": {
          "type": "boolean",
          "default": false,
          "description": "Automatically apply AI suggestions without confirmation dialog."
        },
        "ollamaCodeFixer.showPreviewBeforeApply": {
          "type": "boolean",
          "default": true,
          "description": "Show preview diff before applying changes."
        },
        "ollamaCodeFixer.insertPosition": {
          "type": "string",
          "enum": ["replace", "above", "below", "newFile"],
          "default": "replace",
          "description": "Where to insert AI-generated code: replace selection, above, below, or in new file."
        },
        "ollamaCodeFixer.backupOriginalCode": {
          "type": "boolean",
          "default": true,
          "description": "Create backup of original code before applying changes."
        },
        "ollamaCodeFixer.enableCodeLens": {
          "type": "boolean",
          "default": true,
          "description": "Show CodeLens actions above functions and classes."
        },
        "ollamaCodeFixer.autoStartOllama": {
          "type": "boolean",
          "default": true,
          "description": "Automatically try to start Ollama server if it's not running."
        },
        "ollamaCodeFixer.ollamaPath": {
          "type": "string",
          "default": "ollama",
          "description": "Path to ollama executable (if not in PATH)."
        },
        "ollamaCodeFixer.preferredModels": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": ["codellama:7b", "codellama:13b", "codegemma:7b", "llama2:7b", "mistral:7b"],
          "description": "List of preferred models for quick selection."
        },
        "ollamaCodeFixer.codePreviewTheme": {
          "type": "string",
          "enum": ["auto", "light", "dark"],
          "default": "auto",
          "description": "Theme for code preview: auto (follow VS Code), light, or dark."
        }
      }
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "ollama-code-fixer-sidebar",
          "title": "Ollama Code Fixer",
          "icon": "images/sidebar-icon.svg"
        }
      ]
    },
    "views": {
      "ollama-code-fixer-sidebar": [
        {
          "id": "ollamaCodeFixerView",
          "name": "Fixer Tools",
          "icon": "images/fixer-tool.svg"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src/**/*.ts",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.6",
    "@types/node": "18.x",
    "@types/vscode": "^1.85.0",
    "@typescript-eslint/eslint-plugin": "^7.0.0",
    "@typescript-eslint/parser": "^7.0.0",
    "@vscode/test-cli": "^0.0.9",
    "@vscode/test-electron": "^2.3.9",
    "electron": "^36.3.2",
    "eslint": "^8.57.0",
    "typescript": "^5.3.3"
  },
  "dependencies": {
    "axios": "^1.6.0"
  }
}